{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'QuestionForm',\n  data() {\n    return {\n      question: {\n        title: '',\n        options: [{\n          text: '',\n          letter: 'A'\n        }, {\n          text: '',\n          letter: 'B'\n        }, {\n          text: '',\n          letter: 'C'\n        }, {\n          text: '',\n          letter: 'D'\n        }],\n        correctAnswer: 0\n      },\n      isEditing: false\n    };\n  },\n  created() {\n    if (this.$route.params.id) {\n      this.isEditing = true;\n      // 假设有一个方法来获取问题的详细信息\n      this.fetchQuestionDetails(this.$route.params.id);\n    }\n  },\n  methods: {\n    submitForm() {\n      const url = this.isEditing ? `http://localhost:8080/api/v1/questions/${this.$route.params.id}` : 'http://localhost:8080/api/v1/questions';\n      const method = this.isEditing ? 'put' : 'post';\n      axios({\n        method: method,\n        url: url,\n        data: this.question\n      }).then(() => {\n        alert('问题已成功提交');\n        this.$router.push('/');\n      }).catch(error => {\n        console.error('提交问题出错:', error);\n        alert('提交问题时出错');\n      });\n    },\n    fetchQuestionDetails(id) {\n      axios.get(`http://localhost:8080/api/v1/questions/${id}`).then(response => {\n        const data = response.data;\n        this.question = {\n          ...this.question,\n          // 保留原有结构\n          title: data.title,\n          answers: data.answers.map(a => ({\n            text: a.text\n          })),\n          // 假设后端返回的是具有 text 属性的答案对象数组\n          correctAnswer: data.correctAnswer\n        };\n      }).catch(error => {\n        console.error('获取问题详情出错:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","question","title","options","text","letter","correctAnswer","isEditing","created","$route","params","id","fetchQuestionDetails","methods","submitForm","url","method","then","alert","$router","push","catch","error","console","get","response","answers","map","a"],"sources":["src/components/QuestionForm.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>{{ isEditing ? '编辑问题' : '添加问题' }}</h2>\n      <form @submit.prevent=\"submitForm\">\n        <div>\n          <label for=\"title\">问题标题:</label>\n          <input id=\"title\" v-model=\"question.title\" type=\"text\" required>\n        </div>\n  \n        <div v-for=\"(answer, index) in question.answers\" :key=\"index\">\n          <label :for=\"'answer-' + index\">答案 {{ index + 1 }}:</label>\n          <input :id=\"'answer-' + index\" v-model=\"answer.text\" type=\"text\" required>\n        </div>\n  \n        <div>\n          <label for=\"correctAnswer\">正确答案编号:</label>\n          <select id=\"correctAnswer\" v-model=\"question.correctAnswer\">\n            <option v-for=\"n in 4\" :key=\"n\" :value=\"n-1\">{{ n }}</option>\n          </select>\n        </div>\n  \n        <button type=\"submit\">提交</button>\n      </form>\n    </div>\n  </template>\n  \n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'QuestionForm',\n    data() {\n        return {\n            question: {\n            title: '',\n            options: [\n                { text: '', letter: 'A' },\n                { text: '', letter: 'B' },\n                { text: '', letter: 'C' },\n                { text: '', letter: 'D' }\n                ],\n            correctAnswer: 0, \n            },\n            isEditing: false,\n        };\n    },\n\n\n    created() {\n    if (this.$route.params.id) {\n      this.isEditing = true;\n      // 假设有一个方法来获取问题的详细信息\n      this.fetchQuestionDetails(this.$route.params.id);\n    }\n  },\n\n      methods: {\n    submitForm() {\n      const url = this.isEditing ? `http://localhost:8080/api/v1/questions/${this.$route.params.id}` : 'http://localhost:8080/api/v1/questions';\n      const method = this.isEditing ? 'put' : 'post';\n\n      axios({\n        method: method,\n        url: url,\n        data: this.question,\n      })\n      .then(() => {\n        alert('问题已成功提交');\n        this.$router.push('/');\n      })\n      .catch(error => {\n        console.error('提交问题出错:', error);\n        alert('提交问题时出错');\n      });\n    },\n    fetchQuestionDetails(id) {\n  axios.get(`http://localhost:8080/api/v1/questions/${id}`)\n    .then(response => {\n      const data = response.data;\n      this.question = {\n        ...this.question, // 保留原有结构\n        title: data.title,\n        answers: data.answers.map(a => ({ text: a.text })), // 假设后端返回的是具有 text 属性的答案对象数组\n        correctAnswer: data.correctAnswer\n      };\n    })\n    .catch(error => {\n      console.error('获取问题详情出错:', error);\n    });\n},\n\n  },\n}\n</script>"],"mappings":";AA4BA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,KAAA;QACAC,OAAA,GACA;UAAAC,IAAA;UAAAC,MAAA;QAAA,GACA;UAAAD,IAAA;UAAAC,MAAA;QAAA,GACA;UAAAD,IAAA;UAAAC,MAAA;QAAA,GACA;UAAAD,IAAA;UAAAC,MAAA;QAAA,EACA;QACAC,aAAA;MACA;MACAC,SAAA;IACA;EACA;EAGAC,QAAA;IACA,SAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACA,KAAAJ,SAAA;MACA;MACA,KAAAK,oBAAA,MAAAH,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA;EACA;EAEAE,OAAA;IACAC,WAAA;MACA,MAAAC,GAAA,QAAAR,SAAA,kDAAAE,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACA,MAAAK,MAAA,QAAAT,SAAA;MAEAT,KAAA;QACAkB,MAAA,EAAAA,MAAA;QACAD,GAAA,EAAAA,GAAA;QACAf,IAAA,OAAAC;MACA,GACAgB,IAAA;QACAC,KAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACAJ,KAAA;MACA;IACA;IACAN,qBAAAD,EAAA;MACAb,KAAA,CAAA0B,GAAA,2CAAAb,EAAA,IACAM,IAAA,CAAAQ,QAAA;QACA,MAAAzB,IAAA,GAAAyB,QAAA,CAAAzB,IAAA;QACA,KAAAC,QAAA;UACA,QAAAA,QAAA;UAAA;UACAC,KAAA,EAAAF,IAAA,CAAAE,KAAA;UACAwB,OAAA,EAAA1B,IAAA,CAAA0B,OAAA,CAAAC,GAAA,CAAAC,CAAA;YAAAxB,IAAA,EAAAwB,CAAA,CAAAxB;UAAA;UAAA;UACAE,aAAA,EAAAN,IAAA,CAAAM;QACA;MACA,GACAe,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}