{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'QuestionForm',\n  data() {\n    return {\n      question: {\n        title: '',\n        options: [{\n          text: '',\n          letter: 'A'\n        }, {\n          text: '',\n          letter: 'B'\n        }, {\n          text: '',\n          letter: 'C'\n        }, {\n          text: '',\n          letter: 'D'\n        }],\n        correctAnswer: 0\n      },\n      isEditing: false\n    };\n  },\n  created() {\n    if (this.$route.params.id) {\n      this.isEditing = true;\n      this.fetchQuestionDetails(this.$route.params.id);\n    }\n  },\n  methods: {\n    submitForm() {\n      const payload = {\n        title: this.question.title,\n        optionA: this.question.answers[0].text,\n        optionB: this.question.answers[1].text,\n        optionC: this.question.answers[2].text,\n        optionD: this.question.answers[3].text,\n        correctAnswer: this.question.correctAnswer + 1 // 将索引调整回1开始\n      };\n      const url = this.isEditing ? `http://localhost:8080/api/v1/questions/${this.$route.params.id}` : 'http://localhost:8080/api/v1/questions';\n      const method = this.isEditing ? 'put' : 'post';\n      axios({\n        method: method,\n        url: url,\n        data: payload\n      }).then(() => {\n        alert('问题已成功提交');\n        this.$router.push('/');\n      }).catch(error => {\n        console.error('提交问题出错:', error);\n        alert('提交问题时出错');\n      });\n    },\n    fetchQuestionDetails(id) {\n      axios.get(`http://localhost:8080/api/v1/questions/${id}`).then(response => {\n        const data = response.data[0]; // 假设您只处理第一个返回的问题对象\n        this.question.title = data.title;\n        this.question.answers[0].text = data.optionA;\n        this.question.answers[1].text = data.optionB;\n        this.question.answers[2].text = data.optionC;\n        this.question.answers[3].text = data.optionD;\n        this.question.correctAnswer = data.correctAnswer - 1; // 调整为0开始的索引\n      }).catch(error => {\n        console.error('获取问题详情出错:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","question","title","options","text","letter","correctAnswer","isEditing","created","$route","params","id","fetchQuestionDetails","methods","submitForm","payload","optionA","answers","optionB","optionC","optionD","url","method","then","alert","$router","push","catch","error","console","get","response"],"sources":["src/components/QuestionForm.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>{{ isEditing ? '编辑问题' : '添加问题' }}</h2>\n      <form @submit.prevent=\"submitForm\">\n        <div>\n          <label for=\"title\">问题标题:</label>\n          <input id=\"title\" v-model=\"question.title\" type=\"text\" required>\n        </div>\n  \n        <div v-for=\"(answer, index) in question.answers\" :key=\"index\">\n          <label :for=\"'answer-' + index\">答案 {{ index + 1 }}:</label>\n          <input :id=\"'answer-' + index\" v-model=\"answer.text\" type=\"text\" required>\n        </div>\n  \n        <div>\n          <label for=\"correctAnswer\">正确答案编号:</label>\n          <select id=\"correctAnswer\" v-model=\"question.correctAnswer\">\n            <option v-for=\"n in 4\" :key=\"n\" :value=\"n-1\">{{ n }}</option>\n          </select>\n        </div>\n  \n        <button type=\"submit\">提交</button>\n      </form>\n    </div>\n  </template>\n  \n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'QuestionForm',\n    data() {\n        return {\n            question: {\n            title: '',\n            options: [\n                { text: '', letter: 'A' },\n                { text: '', letter: 'B' },\n                { text: '', letter: 'C' },\n                { text: '', letter: 'D' }\n                ],\n            correctAnswer: 0, \n            },\n            isEditing: false,\n        };\n    },\n\n\n    created() {\n    if (this.$route.params.id) {\n      this.isEditing = true;\n      this.fetchQuestionDetails(this.$route.params.id);\n    }\n  },\n\n      methods: {\n        submitForm() {\n            const payload = {\n                title: this.question.title,\n                optionA: this.question.answers[0].text,\n                optionB: this.question.answers[1].text,\n                optionC: this.question.answers[2].text,\n                optionD: this.question.answers[3].text,\n                correctAnswer: this.question.correctAnswer + 1 // 将索引调整回1开始\n            };\n\n        const url = this.isEditing ? `http://localhost:8080/api/v1/questions/${this.$route.params.id}` : 'http://localhost:8080/api/v1/questions';\n        const method = this.isEditing ? 'put' : 'post';\n\n        axios({\n            method: method,\n            url: url,\n            data: payload,\n        })\n        .then(() => {\n            alert('问题已成功提交');\n            this.$router.push('/');\n        })\n        .catch(error => {\n            console.error('提交问题出错:', error);\n            alert('提交问题时出错');\n        });\n        },\n\n        fetchQuestionDetails(id) {\n            axios.get(`http://localhost:8080/api/v1/questions/${id}`)\n                .then(response => {\n                const data = response.data[0]; // 假设您只处理第一个返回的问题对象\n                this.question.title = data.title;\n                this.question.answers[0].text = data.optionA;\n                this.question.answers[1].text = data.optionB;\n                this.question.answers[2].text = data.optionC;\n                this.question.answers[3].text = data.optionD;\n                this.question.correctAnswer = data.correctAnswer - 1; // 调整为0开始的索引\n                })\n                .catch(error => {\n                console.error('获取问题详情出错:', error);\n                });\n        },\n\n\n  },\n}\n</script>"],"mappings":";AA4BA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,KAAA;QACAC,OAAA,GACA;UAAAC,IAAA;UAAAC,MAAA;QAAA,GACA;UAAAD,IAAA;UAAAC,MAAA;QAAA,GACA;UAAAD,IAAA;UAAAC,MAAA;QAAA,GACA;UAAAD,IAAA;UAAAC,MAAA;QAAA,EACA;QACAC,aAAA;MACA;MACAC,SAAA;IACA;EACA;EAGAC,QAAA;IACA,SAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACA,KAAAJ,SAAA;MACA,KAAAK,oBAAA,MAAAH,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA;EACA;EAEAE,OAAA;IACAC,WAAA;MACA,MAAAC,OAAA;QACAb,KAAA,OAAAD,QAAA,CAAAC,KAAA;QACAc,OAAA,OAAAf,QAAA,CAAAgB,OAAA,IAAAb,IAAA;QACAc,OAAA,OAAAjB,QAAA,CAAAgB,OAAA,IAAAb,IAAA;QACAe,OAAA,OAAAlB,QAAA,CAAAgB,OAAA,IAAAb,IAAA;QACAgB,OAAA,OAAAnB,QAAA,CAAAgB,OAAA,IAAAb,IAAA;QACAE,aAAA,OAAAL,QAAA,CAAAK,aAAA;MACA;MAEA,MAAAe,GAAA,QAAAd,SAAA,kDAAAE,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACA,MAAAW,MAAA,QAAAf,SAAA;MAEAT,KAAA;QACAwB,MAAA,EAAAA,MAAA;QACAD,GAAA,EAAAA,GAAA;QACArB,IAAA,EAAAe;MACA,GACAQ,IAAA;QACAC,KAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACAJ,KAAA;MACA;IACA;IAEAZ,qBAAAD,EAAA;MACAb,KAAA,CAAAgC,GAAA,2CAAAnB,EAAA,IACAY,IAAA,CAAAQ,QAAA;QACA,MAAA/B,IAAA,GAAA+B,QAAA,CAAA/B,IAAA;QACA,KAAAC,QAAA,CAAAC,KAAA,GAAAF,IAAA,CAAAE,KAAA;QACA,KAAAD,QAAA,CAAAgB,OAAA,IAAAb,IAAA,GAAAJ,IAAA,CAAAgB,OAAA;QACA,KAAAf,QAAA,CAAAgB,OAAA,IAAAb,IAAA,GAAAJ,IAAA,CAAAkB,OAAA;QACA,KAAAjB,QAAA,CAAAgB,OAAA,IAAAb,IAAA,GAAAJ,IAAA,CAAAmB,OAAA;QACA,KAAAlB,QAAA,CAAAgB,OAAA,IAAAb,IAAA,GAAAJ,IAAA,CAAAoB,OAAA;QACA,KAAAnB,QAAA,CAAAK,aAAA,GAAAN,IAAA,CAAAM,aAAA;MACA,GACAqB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;MACA;IACA;EAGA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}